<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/27/2023 9:39:08 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="WATERMELONX86"
  DTS:CreatorName="WATERMELONX86\water"
  DTS:DTSID="{70ADA3A0-8899-4670-86BA-6831DF876700}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="34"
  DTS:VersionGUID="{C970DFDC-019C-4B07-BA1A-DB344085FE23}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{C49F6502-D998-4F63-9D3E-407C4F73C563}"
      DTS:ObjectName="WATERMELONX86.NDSDA">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=WATERMELONX86;Initial Catalog=NDSDA;Provider=SQLOLEDB.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package1-{C49F6502-D998-4F63-9D3E-407C4F73C563}WATERMELONX86.NDSDA;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[WATERMELONX86.StageDA]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{60714406-30D0-4D4B-AFA5-16BC035BECBE}"
      DTS:ObjectName="WATERMELONX86.StageDA">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=WATERMELONX86;Initial Catalog=StageDA;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package1-{60714406-30D0-4D4B-AFA5-16BC035BECBE}WATERMELONX86.StageDA;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Branch_Stage to Branch_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7A5C41F3-97A2-4116-AFCD-C664F1448530}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Branch_Stage to Branch_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add createdDate, updateDate Columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]"
                      name="createdDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]"
                      name="updatedDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add Source, Status columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      name="Source"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      name="Status"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add updatedDate"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Output].Columns[updatedDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Output].Columns[updatedDate]"
                      name="updatedDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert into Branch_NDS"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Branch_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].Columns[Source]"
                      cachedDataType="i4"
                      cachedName="Source"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Source]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].Columns[Status]"
                      cachedDataType="i4"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].Columns[createdDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="createdDate"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[createdDate]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].Columns[updatedDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="updatedDate"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[updatedDate]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].Columns[Branch]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Branch"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Branch_NK]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[Branch]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="City"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[City]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Branch_SK]"
                      dataType="i4"
                      name="Branch_SK" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Branch_NK]"
                      dataType="wstr"
                      length="5"
                      name="Branch_NK" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Source]"
                      dataType="i4"
                      name="Source" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                      dataType="i4"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[createdDate]"
                      dataType="dbTimeStamp"
                      name="createdDate" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input].ExternalColumns[updatedDate]"
                      dataType="dbTimeStamp"
                      name="updatedDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load from Branch_Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Branch_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[Branch]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].ExternalColumns[Branch]"
                      length="255"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[Branch]"
                      name="Branch"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      length="255"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].ExternalColumns[Branch]"
                      dataType="wstr"
                      length="255"
                      name="Branch" />
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].ExternalColumns[City]"
                      dataType="wstr"
                      length="255"
                      name="City" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[Branch]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[Branch]"
                      name="Branch" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[City]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup Branch"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Branch_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Branch_NDS]) [refTable]
where [refTable].[Branch_NK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Branch_SK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Branch_NK" dataType="DT_WSTR" length="5" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Source" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="createdDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[Branch]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Inputs[Lookup Input].Columns[Branch]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Branch"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[Branch]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Branch_NK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Match Output].Columns[Branch_SK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Match Output].Columns[Branch_SK]"
                      name="Branch_SK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Branch_SK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="UPDATE Branch_NDS"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE Branch_NDS SET Branch_NK = ?, Name = ?, Source =  ?, Status = ?, updatedDate = ? WHERE Branch_SK = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].Columns[Branch]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Branch"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[Branch]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].Columns[Source]"
                      cachedDataType="i4"
                      cachedName="Source"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="City"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output].Columns[City]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].Columns[Status]"
                      cachedDataType="i4"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].Columns[updatedDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="updatedDate"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Output].Columns[updatedDate]" />
                    <inputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].Columns[Branch_SK]"
                      cachedDataType="i4"
                      cachedName="Branch_SK"
                      externalMetadataColumnId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Match Output].Columns[Branch_SK]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="5"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="50"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="dbTimeStamp"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">17</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="i4"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">17</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Branch_Stage to Branch_NDS.Paths[Derived Column Output]"
              endId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import Branch_Stage to Branch_NDS.Paths[Derived Column Output1]"
              endId="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import Branch_Stage to Branch_NDS.Paths[Derived Column Output2]"
              endId="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import Branch_Stage to Branch_NDS.Paths[Lookup Match Output]"
              endId="Package\Import Branch_Stage to Branch_NDS\Add updatedDate.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Import Branch_Stage to Branch_NDS.Paths[Lookup No Match Output]"
              endId="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]"
              name="Lookup No Match Output"
              startId="Package\Import Branch_Stage to Branch_NDS\Lookup Branch.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Import Branch_Stage to Branch_NDS.Paths[OLE DB Source Output]"
              endId="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import ProductLine_Stage to ProductLine_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{754b0dbf-888a-4322-9478-e67668ac21c2}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import ProductLine_Stage to ProductLine_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add createdDate, updateDate Columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]"
                      name="createdDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]"
                      name="updatedDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add Source, Status columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      name="Source"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      name="Status"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load from ProductLine_Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ProductLine_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[Product line]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].ExternalColumns[Product line]"
                      length="255"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[Product line]"
                      name="Product line"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[ProductLineID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].ExternalColumns[ProductLineID]"
                      length="255"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[ProductLineID]"
                      name="ProductLineID"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].ExternalColumns[Product line]"
                      dataType="wstr"
                      length="255"
                      name="Product line" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].ExternalColumns[ProductLineID]"
                      dataType="wstr"
                      length="255"
                      name="ProductLineID" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[Product line]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[Product line]"
                      name="Product line" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[ProductLineID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[ProductLineID]"
                      name="ProductLineID" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup ProductLineId"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[ProductLine_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[ProductLine_NDS]) [refTable]
where [refTable].[ProductLine_NK] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ProductLine_SK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProductLine_NK" dataType="DT_WSTR" length="5" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Source" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="createdDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updateDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[ProductLineID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Inputs[Lookup Input].Columns[ProductLineID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ProductLineID"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[ProductLineID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ProductLine_NK</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Match Output].Columns[ProductLine_SK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Match Output].Columns[ProductLine_SK]"
                      name="ProductLine_SK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ProductLine_SK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE ProductLine_NDS SET ProductLine_NK = ?, Name = ?, Source =  ?, Status = ? WHERE ProductLine_SK= ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[Source]"
                      cachedDataType="i4"
                      cachedName="Source"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[Status]"
                      cachedDataType="i4"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[ProductLineID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ProductLineID"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[ProductLineID]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[Product line]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product line"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[Product line]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].Columns[ProductLine_SK]"
                      cachedDataType="i4"
                      cachedName="ProductLine_SK"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Match Output].Columns[ProductLine_SK]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="5"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="50"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="i4"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="i4"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">17</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[ProductLine_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[createdDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="createdDate"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[createdDate]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProductLineID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ProductLineID"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductLine_NK]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[ProductLineID]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Product line]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product line"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output].Columns[Product line]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Source]"
                      cachedDataType="i4"
                      cachedName="Source"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]" />
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                      cachedDataType="i4"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source]"
                      dataType="i4"
                      name="Source" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                      dataType="i4"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[createdDate]"
                      dataType="dbTimeStamp"
                      name="createdDate" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductLine_SK]"
                      dataType="i4"
                      name="ProductLine_SK" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductLine_NK]"
                      dataType="wstr"
                      length="5"
                      name="ProductLine_NK" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductLineId]"
                      dataType="i4"
                      name="ProductLineId" />
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updateDate]"
                      dataType="dbTimeStamp"
                      name="updateDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Set updatedDate"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE ProductLine_NDS  SET updatedDate = GETDATE() WHERE ProductLine_SK = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input].Columns[ProductLine_SK]"
                      cachedDataType="i4"
                      cachedName="ProductLine_SK"
                      externalMetadataColumnId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Match Output].Columns[ProductLine_SK]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="i4"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">17</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Derived Column Output]"
              endId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Derived Column Output1]"
              endId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Lookup Match Output]"
              endId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Lookup No Match Output]"
              endId="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]"
              name="Lookup No Match Output"
              startId="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[OLE DB Command Output]"
              endId="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command.Inputs[OLE DB Command Input]"
              name="OLE DB Command Output"
              startId="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate.Outputs[OLE DB Command Output]" />
            <path
              refId="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[OLE DB Source Output]"
              endId="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Product_Stage to Product_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{e6a824ff-f77f-48f9-9f51-9682ad3d8326}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Product_Stage to Product_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add Source, Status columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      name="Source"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      name="Status"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load from Product_Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Product_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].Columns[ProductID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      length="255"
                      lineageId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].Columns[ProductID]"
                      name="ProductID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].Columns[Unit price]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].ExternalColumns[Unit price]"
                      lineageId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].Columns[Unit price]"
                      name="Unit price"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      dataType="wstr"
                      length="255"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output].ExternalColumns[Unit price]"
                      dataType="r8"
                      name="Unit price" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                      name="ProductID" />
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[Unit price]"
                      dataType="r8"
                      lineageId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[Unit price]"
                      name="Unit price" />
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup ProductLineId"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml"></property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Connections[OleDbConnection]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Product_Stage to Product_NDS.Paths[Derived Column Output]"
              endId="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import Product_Stage to Product_NDS.Paths[OLE DB Source Output]"
              endId="Package\Import Product_Stage to Product_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
              name="OLE DB Source Output"
              startId="Package\Import Product_Stage to Product_NDS\Load from Product_Stage.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Sales_Stage to PaymentType_NDS"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{C1C08281-6D28-496C-80F1-3C46DA3B5D86}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Sales_Stage to PaymentType_NDS"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add createdDate, updateDate Columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]"
                      name="createdDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]"
                      name="updatedDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[GETDATE]()</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">GETDATE()</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add Source, Status columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]"
                      name="Source"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]"
                      name="Status"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Load from Sales_Stage"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Sales_Stage]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.StageDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].Columns[Payment]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Payment]"
                      length="255"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].Columns[Payment]"
                      name="Payment"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Branch]"
                      dataType="wstr"
                      length="255"
                      name="Branch" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Invoice ID]"
                      dataType="wstr"
                      length="255"
                      name="Invoice ID" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Customer type]"
                      dataType="wstr"
                      length="255"
                      name="Customer type" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Gender]"
                      dataType="wstr"
                      length="255"
                      name="Gender" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                      dataType="wstr"
                      length="255"
                      name="ProductID" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Quantity]"
                      dataType="r8"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Tax 5%]"
                      dataType="r8"
                      name="Tax 5%" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Total]"
                      dataType="r8"
                      name="Total" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Payment]"
                      dataType="wstr"
                      length="255"
                      name="Payment" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[cogs]"
                      dataType="r8"
                      name="cogs" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[gross margin percentage]"
                      dataType="r8"
                      name="gross margin percentage" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[gross income]"
                      dataType="r8"
                      name="gross income" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].ExternalColumns[Rating]"
                      dataType="r8"
                      name="Rating" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output].Columns[Payment]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Error Output].Columns[Payment]"
                      name="Payment" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[PaymentType_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[PaymentType_NDS]) [refTable]
where [refTable].[Name] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="PaymentType_SK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PaymentType_NK" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Name" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Source" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Status" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="createdDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="updatedDate" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output].Columns[Payment]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Inputs[Lookup Input].Columns[Payment]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Payment"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output].Columns[Payment]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Name</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="RedirectRow"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Match Output].Columns[PaymentType_SK]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Match Output].Columns[PaymentType_SK]"
                      name="PaymentType_SK"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">PaymentType_SK</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[PaymentType_NDS]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  connectionManagerRefId="Package.ConnectionManagers[WATERMELONX86.NDSDA]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Payment]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Payment"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output].Columns[Payment]" />
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[createdDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="createdDate"
                      externalMetadataColumnId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[createdDate]"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[createdDate]" />
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[updatedDate]"
                      cachedDataType="dbTimeStamp"
                      cachedName="updatedDate"
                      externalMetadataColumnId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updatedDate]"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output].Columns[updatedDate]" />
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Status]"
                      cachedDataType="i4"
                      cachedName="Status"
                      externalMetadataColumnId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Status]" />
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Source]"
                      cachedDataType="i4"
                      cachedName="Source"
                      externalMetadataColumnId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source]"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output].Columns[Source]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PaymentType_SK]"
                      dataType="i4"
                      name="PaymentType_SK" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PaymentType_NK]"
                      dataType="i4"
                      name="PaymentType_NK" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Source]"
                      dataType="i4"
                      name="Source" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Status]"
                      dataType="i4"
                      name="Status" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[createdDate]"
                      dataType="dbTimeStamp"
                      name="createdDate" />
                    <externalMetadataColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[updatedDate]"
                      dataType="dbTimeStamp"
                      name="updatedDate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import Sales_Stage to PaymentType_NDS\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Inputs[Sort Input].Columns[Payment]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Payment"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].Columns[Payment]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output].Columns[Payment]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output].Columns[Payment]"
                      name="Payment"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output].Columns[Payment]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import Sales_Stage to PaymentType_NDS.Paths[Derived Column Output]"
              endId="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import Sales_Stage to PaymentType_NDS.Paths[Derived Column Output1]"
              endId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import Sales_Stage to PaymentType_NDS.Paths[Lookup Error Output]"
              endId="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns.Inputs[Derived Column Input]"
              name="Lookup Error Output"
              startId="Package\Import Sales_Stage to PaymentType_NDS\Lookup.Outputs[Lookup Error Output]" />
            <path
              refId="Package\Import Sales_Stage to PaymentType_NDS.Paths[OLE DB Source Output]"
              endId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Import Sales_Stage to PaymentType_NDS.Paths[Sort Output]"
              endId="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns.Inputs[Derived Column Input]"
              name="Sort Output"
              startId="Package\Import Sales_Stage to PaymentType_NDS\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="254.666666666667,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS"
          TopLeft="83.7499987520278,61.749998895824" />
        <NodeLayout
          Size="261.333333333334,42.6666666666667"
          Id="Package\Import Product_Stage to Product_NDS"
          TopLeft="86.8749987054617,212.516664702396" />
        <NodeLayout
          Size="300,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS"
          TopLeft="84.9999987334014,141.04999747783" />
        <NodeLayout
          Size="277.333333333334,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS"
          TopLeft="97.4999985471368,279.916662889222" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Branch_Stage to Branch_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="210.666666666667,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\Add Source, Status columns"
          TopLeft="132.142857142857,132.380952380952" />
        <NodeLayout
          Size="149.333333333334,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\Lookup Branch"
          TopLeft="161.607143173793,212.80952427444" />
        <NodeLayout
          Size="190.666666666667,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS"
          TopLeft="334.196428711127,413.288095272964" />
        <NodeLayout
          Size="196,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage"
          TopLeft="145,62" />
        <NodeLayout
          Size="180,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\UPDATE Branch_NDS"
          TopLeft="42.7678571335439,412.380952380952" />
        <NodeLayout
          Size="262.666666666667,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\Add createdDate, updateDate Columns"
          TopLeft="297.857142857143,332.619047619048" />
        <EdgeLayout
          Id="Package\Import Branch_Stage to Branch_NDS.Paths[OLE DB Source Output]"
          TopLeft="240.238095238095,104.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.7142857142858"
              Start="0,0"
              End="0,20.2142857142858">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2142857142858" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Branch_Stage to Branch_NDS.Paths[Derived Column Output1]"
          TopLeft="429.360119117469,375.285714285715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.0023809872491"
              Start="0,0"
              End="0,30.5023809872491">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5023809872491" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Branch_Stage to Branch_NDS.Paths[Derived Column Output]"
          TopLeft="236.875000158325,175.047619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.7619052268215"
              Start="0,0"
              End="0,30.2619052268215">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2619052268215" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Branch_Stage to Branch_NDS.Paths[Lookup No Match Output]"
          TopLeft="259.829365396015,255.476190941107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169.361110794462,77.1428566779411"
              Start="0,0"
              End="169.361110794462,69.6428566779411">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3478039504001" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.3478039504001"
                    Point2="0,31.3478039504001"
                    Point3="4,31.3478039504001" />
                  <mssgle:LineSegment
                    End="165.361110794462,31.3478039504001" />
                  <mssgle:CubicBezierSegment
                    Point1="165.361110794462,31.3478039504001"
                    Point2="169.361110794462,31.3478039504001"
                    Point3="169.361110794462,35.3478039504001" />
                  <mssgle:LineSegment
                    End="169.361110794462,69.6428566779411" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="28.8741686784808,36.3478039504001,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="161.333333333334,42.6666666666667"
          Id="Package\Import Branch_Stage to Branch_NDS\Add updatedDate"
          TopLeft="48.1249992828817,331.466664899985" />
        <EdgeLayout
          Id="Package\Import Branch_Stage to Branch_NDS.Paths[Lookup Match Output]"
          TopLeft="212.718254284904,255.476190941107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-83.9265883353554,75.990473958878"
              Start="0,0"
              End="-83.9265883353554,68.490473958878">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.8795212200388" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.8795212200388"
                    Point2="0,30.8795212200388"
                    Point3="-4,30.8795212200388" />
                  <mssgle:LineSegment
                    End="-79.9265883353554,30.8795212200388" />
                  <mssgle:CubicBezierSegment
                    Point1="-79.9265883353554,30.8795212200388"
                    Point2="-83.9265883353554,30.8795212200388"
                    Point3="-83.9265883353554,34.8795212200388" />
                  <mssgle:LineSegment
                    End="-83.9265883353554,68.490473958878" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-90.1546808864277,35.8795212200388,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Branch_Stage to Branch_NDS.Paths[Derived Column Output2]"
          TopLeft="130.779761541546,374.133331566652">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.2476208143004"
              Start="0,0"
              End="0,30.7476208143004">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.7476208143004" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Branch_Stage to Branch_NDS\Lookup Branch">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Branch_NDS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Branch_Stage to Branch_NDS\Insert into Branch_NDS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Branch_Stage to Branch_NDS\Load from Branch_Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Product_Stage to Product_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="210.666666666667,42.6666666666667"
          Id="Package\Import Product_Stage to Product_NDS\Add Source, Status columns"
          TopLeft="132.767857133544,142.780952194986" />
        <NodeLayout
          Size="198.666666666667,42.6666666666667"
          Id="Package\Import Product_Stage to Product_NDS\Load from Product_Stage"
          TopLeft="145,62" />
        <EdgeLayout
          Id="Package\Import Product_Stage to Product_NDS.Paths[OLE DB Source Output]"
          TopLeft="241.217261900105,104.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.1142855283188"
              Start="0,0"
              End="0,30.6142855283188">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.6142855283188" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="182.666666666667,42.6666666666667"
          Id="Package\Import Product_Stage to Product_NDS\Lookup ProductLineId"
          TopLeft="149,230" />
        <EdgeLayout
          Id="Package\Import Product_Stage to Product_NDS.Paths[Derived Column Output]"
          TopLeft="239.217261900105,185.447618861653">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.5523811383473"
              Start="0,0"
              End="0,37.0523811383473">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.0523811383473" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Product_Stage to Product_NDS\Load from Product_Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import ProductLine_Stage to ProductLine_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="210.666666666667,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\Add Source, Status columns"
          TopLeft="155.642857142857,133.380952380952" />
        <NodeLayout
          Size="182.666666666667,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId"
          TopLeft="173.857142857143,238.809523809524" />
        <NodeLayout
          Size="172,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination"
          TopLeft="343.571428571429,415.238095238095" />
        <NodeLayout
          Size="218.666666666667,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage"
          TopLeft="145,62" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\Set updatedDate"
          TopLeft="51.4285714285714,330.952380952381" />
        <NodeLayout
          Size="166.666666666667,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Command"
          TopLeft="42.1428571428571,412.380952380952" />
        <NodeLayout
          Size="262.666666666667,42.6666666666667"
          Id="Package\Import ProductLine_Stage to ProductLine_NDS\Add createdDate, updateDate Columns"
          TopLeft="297.857142857143,332.619047619048" />
        <EdgeLayout
          Id="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[OLE DB Source Output]"
          TopLeft="257.654761904762,104.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.7142857142854"
              Start="0,0"
              End="0,21.2142857142854">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.2142857142854" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[OLE DB Command Output]"
          TopLeft="128.119047619048,373.619047619048">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.7619047619043"
              Start="0,0"
              End="0,31.2619047619043">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.2619047619043" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Lookup Match Output]"
          TopLeft="236.079365079365,281.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-105.317460317461,49.4761904761904"
              Start="0,0"
              End="-105.317460317461,41.9761904761904">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.0482392667631" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.0482392667631"
                    Point2="0,20.0482392667631"
                    Point3="-4,20.0482392667631" />
                  <mssgle:LineSegment
                    End="-101.317460317461,20.0482392667631" />
                  <mssgle:CubicBezierSegment
                    Point1="-101.317460317461,20.0482392667631"
                    Point2="-105.317460317461,20.0482392667631"
                    Point3="-105.317460317461,24.0482392667631" />
                  <mssgle:LineSegment
                    End="-105.317460317461,41.9761904761904" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-100.85011687748,25.0482392667631,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Derived Column Output1]"
          TopLeft="429.380952380953,375.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.952380952381"
              Start="0,0"
              End="0,32.452380952381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.452380952381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Derived Column Output]"
          TopLeft="263.083333333333,176.047619047619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.7619047619053"
              Start="0,0"
              End="0,55.2619047619053">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.2619047619053" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import ProductLine_Stage to ProductLine_NDS.Paths[Lookup No Match Output]"
          TopLeft="294.301587301587,281.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="134.888888888889,51.1428571428573"
              Start="0,0"
              End="134.888888888889,43.6428571428573">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7235890014472" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7235890014472"
                    Point2="0,20.7235890014472"
                    Point3="4,20.7235890014472" />
                  <mssgle:LineSegment
                    End="130.888888888889,20.7235890014472" />
                  <mssgle:CubicBezierSegment
                    Point1="130.888888888889,20.7235890014472"
                    Point2="134.888888888889,20.7235890014472"
                    Point3="134.888888888889,24.7235890014472" />
                  <mssgle:LineSegment
                    End="134.888888888889,43.6428571428573" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="11.6380577256945,25.7235890014472,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import ProductLine_Stage to ProductLine_NDS\Lookup ProductLineId">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[ProductLine_NDS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import ProductLine_Stage to ProductLine_NDS\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import ProductLine_Stage to ProductLine_NDS\Load from ProductLine_Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Sales_Stage to PaymentType_NDS">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="210.666666666667,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS\Add Source, Status columns"
          TopLeft="156.666666666667,209.555555555556" />
        <NodeLayout
          Size="172,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination"
          TopLeft="303.333333333333,451.555555555556" />
        <NodeLayout
          Size="188,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage"
          TopLeft="172.333333333333,44.3333333333333" />
        <NodeLayout
          Size="98.6666666666667,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS\Sort"
          TopLeft="222,127.333333333333" />
        <NodeLayout
          Size="113.333333333334,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS\Lookup"
          TopLeft="212.666666666667,285.777777777778" />
        <NodeLayout
          Size="262.666666666667,42.6666666666667"
          Id="Package\Import Sales_Stage to PaymentType_NDS\Add createdDate, updateDate Columns"
          TopLeft="303.333333333333,366" />
        <EdgeLayout
          Id="Package\Import Sales_Stage to PaymentType_NDS.Paths[Sort Output]"
          TopLeft="271.333333333333,170">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.33333333333331,39.5555555555556"
              Start="0,0"
              End="-9.33333333333331,32.0555555555556">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.7777777777778" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.7777777777778"
                    Point2="0,19.7777777777778"
                    Point3="-4,19.7777777777778" />
                  <mssgle:LineSegment
                    End="-5.33333333333331,19.7777777777778" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.33333333333331,19.7777777777778"
                    Point2="-9.33333333333331,19.7777777777778"
                    Point3="-9.33333333333331,23.7777777777778" />
                  <mssgle:LineSegment
                    End="-9.33333333333331,32.0555555555556" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Sales_Stage to PaymentType_NDS.Paths[OLE DB Source Output]"
          TopLeft="268.833333333333,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.3333333333333"
              Start="0,0"
              End="0,32.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Sales_Stage to PaymentType_NDS.Paths[Lookup Error Output]"
          TopLeft="269.333333333333,328.444444444445">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="165.333333333333,37.5555555555555"
              Start="0,0"
              End="165.333333333333,30.0555555555555">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.7777777777777" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.7777777777777"
                    Point2="0,18.7777777777777"
                    Point3="4,18.7777777777777" />
                  <mssgle:LineSegment
                    End="161.333333333333,18.7777777777777" />
                  <mssgle:CubicBezierSegment
                    Point1="161.333333333333,18.7777777777777"
                    Point2="165.333333333333,18.7777777777777"
                    Point3="165.333333333333,22.7777777777777" />
                  <mssgle:LineSegment
                    End="165.333333333333,30.0555555555555" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="36.8002799479166,23.7777777777777,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Sales_Stage to PaymentType_NDS.Paths[Derived Column Output1]"
          TopLeft="265.666666666667,252.222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.5555555555556"
              Start="0,0"
              End="0,26.0555555555556">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0555555555556" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Sales_Stage to PaymentType_NDS.Paths[Derived Column Output]"
          TopLeft="434.666666666667,408.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45.3333333333332,42.8888888888889"
              Start="0,0"
              End="-45.3333333333332,35.3888888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.4444444444444" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.4444444444444"
                    Point2="0,21.4444444444444"
                    Point3="-4,21.4444444444444" />
                  <mssgle:LineSegment
                    End="-41.3333333333332,21.4444444444444" />
                  <mssgle:CubicBezierSegment
                    Point1="-41.3333333333332,21.4444444444444"
                    Point2="-45.3333333333332,21.4444444444444"
                    Point3="-45.3333333333332,25.4444444444444" />
                  <mssgle:LineSegment
                    End="-45.3333333333332,35.3888888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Sales_Stage to PaymentType_NDS\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Sales_Stage to PaymentType_NDS\Load from Sales_Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Import Sales_Stage to PaymentType_NDS\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[PaymentType_NDS]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>